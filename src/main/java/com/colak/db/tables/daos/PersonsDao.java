/*
 * This file is generated by jOOQ.
 */
package com.colak.db.tables.daos;


import com.colak.db.AbstractSpringDAOImpl;
import com.colak.db.tables.Persons;
import com.colak.db.tables.records.PersonsRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class PersonsDao extends AbstractSpringDAOImpl<PersonsRecord, com.colak.db.tables.pojos.Persons, Long> {

    /**
     * Create a new PersonsDao without any configuration
     */
    public PersonsDao() {
        super(Persons.PERSONS, com.colak.db.tables.pojos.Persons.class);
    }

    /**
     * Create a new PersonsDao with an attached configuration
     */
    @Autowired
    public PersonsDao(Configuration configuration) {
        super(Persons.PERSONS, com.colak.db.tables.pojos.Persons.class, configuration);
    }

    @Override
    public Long getId(com.colak.db.tables.pojos.Persons object) {
        return object.getPersonKey();
    }

    /**
     * Fetch records that have <code>person_key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.colak.db.tables.pojos.Persons> fetchRangeOfPersonKey(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Persons.PERSONS.PERSON_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>person_key IN (values)</code>
     */
    public List<com.colak.db.tables.pojos.Persons> fetchByPersonKey(Long... values) {
        return fetch(Persons.PERSONS.PERSON_KEY, values);
    }

    /**
     * Fetch a unique record that has <code>person_key = value</code>
     */
    public com.colak.db.tables.pojos.Persons fetchOneByPersonKey(Long value) {
        return fetchOne(Persons.PERSONS.PERSON_KEY, value);
    }

    /**
     * Fetch a unique record that has <code>person_key = value</code>
     */
    public Optional<com.colak.db.tables.pojos.Persons> fetchOptionalByPersonKey(Long value) {
        return fetchOptional(Persons.PERSONS.PERSON_KEY, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.colak.db.tables.pojos.Persons> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.colak.db.tables.pojos.Persons> fetchByName(String... values) {
        return fetch(Persons.PERSONS.NAME, values);
    }
}
